{"version":3,"file":"static/js/186.378c1183.chunk.js","mappings":"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","sources":["apiServises/apiServises.js","webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f907ec6f235cb6bab9021d7ee76a1e81';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst URL_BY_ID = 'https://api.themoviedb.org/3/movie/';\nconst URL_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\n\nexport async function fetchTrendingMovies(page) {\n  const url = `${BASE_URL}?api_key=${API_KEY}&page=${page}`;\n  try {\n    const response = await axios.get(`${url}`);\n    const movies = response.data.results;\n    const totalPage = response.data.total_pages;\n    return { movies, totalPage };\n\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMoviesByName(query) {\n  const url = `${URL_BY_NAME}?api_key=${API_KEY}&query=${query}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const movies = response.data.results;\n    return { movies };\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMoviesById(movie_id) {\n  const url = `${URL_BY_ID}${movie_id}?api_key=${API_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const movie = response.data;\n    return { movie };\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${URL_BY_ID}${movie_id}/reviews?api_key=${API_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const review = response.data.results;\n\n    return review;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieCasts(movie_id) {\n  const url = `${URL_BY_ID}${movie_id}/credits?api_key=${API_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const casts = response.data.cast;\n    return casts;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from '../Container/Container.module.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div\n      className={css.container}\n\n    >\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n<div className={css.loaderWrapper}>\n        <ColorRing\n          margin=\"0 auto\"\n          visible={true}\n          height=\"100\"\n          width=\"100\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n        />\n      </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\nimport { fetchMovieReviews } from '../../apiServises/apiServises';\nimport { Container } from '../Container/Container';\nconst Rewiews = () => {\n  const { movieId } = useParams();\n  const [isMoviesLoading, setIsMoviesLoading] = useState(true);\n  const [reviews, setReviews] = useState(null);\n  // const location = useLocation();\n  // const backLinkLocationRef = useRef(location?.state?.from ?? '/movies')\n\n  useEffect(() => {\n    // setIsMoviesLoading(true);\n    console.log(Number(movieId));\n    async function fetchData() {\n      const response = await fetchMovieReviews(movieId);\n      setReviews(response);\n      setIsMoviesLoading(false);\n    }\n    fetchData();\n  }, [movieId]);\n  if (isMoviesLoading) {\n    return <Loader />;\n  }\n  console.log(reviews);\n  // const { author, content, created_at, id } = reviews;\n  return (\n    <Container>\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={`${review.id}`}>\n              <div>{review.author}</div>\n              <div>{review.content}</div>\n              <div>{review.created_at}</div>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Rewiews;\n"],"names":["API_KEY","BASE_URL","URL_BY_ID","URL_BY_NAME","fetchTrendingMovies","page","url","axios","response","movies","data","results","totalPage","total_pages","console","log","message","fetchMoviesByName","query","fetchMoviesById","movie_id","movie","fetchMovieReviews","review","fetchMovieCasts","casts","cast","Container","children","className","css","Loader","margin","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","movieId","useParams","useState","isMoviesLoading","setIsMoviesLoading","reviews","setReviews","useEffect","Number","fetchData","map","author","content","created_at","id"],"sourceRoot":""}